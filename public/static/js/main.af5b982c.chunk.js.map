{"version":3,"sources":["components/error-indicator/error-icon.png","components/header/index.js","components/header/header.js","services/swapi-service.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/pages/login-page.js","components/pages/secret-page.js","components/spinner/index.js","components/item-list/index.js","components/item-list/item-list.js","components/person-details/index.js","components/person-details/person-details.js","components/pages/people.js","components/planet-details/index.js","components/planet-details/planet-details.js","components/pages/planets.js","components/starship-details/index.js","components/starship-details/starship-details.js","components/pages/starships.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Link","to","SwapiService","_apiBase","getAllPeople","_callee","res","regenerator_default","wrap","_context","prev","next","_this","getResourse","sent","abrupt","results","map","_transformPerson","stop","this","getPerson","_callee2","id","person","_context2","concat","getAllPlanets","_callee3","_context3","_transformPlanet","getPlanet","_callee4","planet","_context4","getAllStarships","_callee5","_context5","_transformStarship","getStarship","_callee6","starship","_context6","_extractId","name","population","rotationPeriod","rotation_period","diameter","gender","birthYear","birth_year","eyeColor","eye_color","model","length","cost","cost_in_credits","url","fetch","ok","Error","status","json","item","match","Spinner","ErrorIndicator","src","icon","alt","RandomPlanet","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","Math","floor","random","then","catch","interval","setInterval","clearInterval","_this$state","hasDone","spinner","components_spinner_spinner","content","random_planet_PlanetView","errInd","components_error_indicator","Component","PlanetView","_ref","Fragment","LoginPage","isLoggedIn","onLogin","Redirect","onClick","SecretPage","ItemList","itemList","renderItems","arr","key","props","onItemSelected","_this2","getData","items","components_spinner","PersonDetails","swapiService","personData","updatePerson","personId","prevProp","_this$state$personDat","People","components_item_list","components_person_details","PlanetDetails","planetData","planetId","console","log","_this$state$planetDat","Planets","components_planet_details","StarshipDetails","starshipData","updateStarship","starshipId","_this$state$starshipD","Starships","components_starship_details","App","selectedPerson","selectedPlanet","selectedStarship","onPersonSelected","onPlanetSelected","onStarshipSelected","BrowserRouter","components_header","components_random_planet","Switch","Route","path","render","exact","people","planets","starships","login_page","secret_page","ReactDOM","components_app","document","querySelector"],"mappings":"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","file":"static/js/main.af5b982c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error-icon.10692a9c.png\";","import Header from \"./header\";\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.css'\r\n\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className='header d-flex'>\r\n      <h3 className='header__headline'>\r\n        <Link to=\"/\">\r\n          Star DB\r\n        </Link>\r\n      </h3>\r\n      <ul className='header__nav d-flex'>\r\n        <li className='header__nav-item'>\r\n          <Link to=\"/people\">People</Link>\r\n        </li>\r\n        <li className='header__nav-item'>\r\n          <Link to=\"/planets\">Planets</Link>\r\n        </li>\r\n        <li className='header__nav-item'>\r\n          <Link to=\"/starships\">Starships</Link>\r\n        </li>\r\n        <li className='header__nav-item'>\r\n          <Link to=\"/secret\">Secret Page</Link>\r\n        </li>\r\n        <li className='header__nav-item'>\r\n          <Link to=\"/login\">Login</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","export default class SwapiService {\r\n\r\n  _apiBase = 'https://swapi.co/api';\r\n\r\n  async getResourse (url) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, receive ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  };\r\n\r\n  getAllPeople = async () => {\r\n    const res = await this.getResourse(`/people/`);\r\n    return res.results.map(this._transformPerson);\r\n  };\r\n\r\n  getPerson = async (id) => {\r\n    const person = await this.getResourse(`/people/${id}/`);\r\n    return this._transformPerson(person);\r\n  };\r\n\r\n  getAllPlanets = async () => {\r\n    const res = await this.getResourse(`/planets/`);\r\n    return res.results.map(this._transformPlanet);\r\n  };\r\n\r\n  getPlanet = async (id) => {\r\n    const planet = await this.getResourse(`/planets/${id}/`);\r\n    return this._transformPlanet(planet);\r\n  };\r\n\r\n  getAllStarships = async () => {\r\n    const res = await this.getResourse(`/starships/`);\r\n    return res.results.map(this._transformStarship);\r\n  };\r\n\r\n  getStarship = async (id) => {\r\n    const starship = await this.getResourse(`/starships/${id}/`);\r\n    return this._transformStarship(starship);\r\n  };\r\n\r\n  _extractId(item){\r\n    const regExp = /\\/([0-9]*)\\/$/;\r\n    return item.url.match(regExp)[1];\r\n  };\r\n\r\n  _transformPlanet = (planet) => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      rotationPeriod: planet.rotation_period,\r\n      diameter: planet.diameter\r\n    }\r\n  };\r\n\r\n  _transformPerson = (person) => {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      gender: person.gender,\r\n      birthYear: person.birth_year,\r\n      eyeColor: person.eye_color\r\n    }\r\n  };\r\n\r\n  _transformStarship = (starship) => {\r\n    return {\r\n      id: this._extractId(starship),\r\n      name: starship.name,\r\n      model: starship.model,\r\n      length: starship.length,\r\n      cost: starship.cost_in_credits\r\n    }\r\n  };\r\n}","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-css ng-scope\">\r\n      <div className=\"lds-double-ring\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Spinner;","import ErrorIndicator from \"./error-indicator\";\r\n\r\nexport default ErrorIndicator;\r\n","import React from 'react';\r\nimport './error-indicator.css';\r\nimport icon from './error-icon.png';\r\n\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className='error-indicator'>\r\n      <img src={icon}\r\n           alt='error icon'\r\n           className='error-icon' />\r\n      <h4 className='boom'>BOOM!</h4>\r\n      <p className='error-text'>Something has gone terribly wrong</p>\r\n      <p className='error-text'>We already try to fix this</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorIndicator from '../error-indicator';\r\nimport './random-planet.css';\r\n\r\nexport default class RandomPlanet extends Component{\r\n\r\n  constructor () {\r\n    super();\r\n\r\n    this.SwapiService = new SwapiService();\r\n\r\n    this.state = {\r\n      planet: {},\r\n      loading: true,\r\n      error: false\r\n    };\r\n\r\n    this.onPlanetLoaded = (planet) => {\r\n      this.setState({\r\n        planet,\r\n        loading: false\r\n      });\r\n    };\r\n\r\n    this.onError = (err) => {\r\n      this.setState({\r\n        loading: false,\r\n        error: true\r\n      });\r\n    };\r\n\r\n    this.updatePlanet = () => {\r\n      const id = Math.floor(Math.random()*19) + 2;\r\n      this.SwapiService\r\n        .getPlanet(id)\r\n        .then(this.onPlanetLoaded)\r\n        .catch(this.onError);\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePlanet();\r\n    this.interval = setInterval(this.updatePlanet, 5000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  render () {\r\n    const { planet, loading, error } = this.state;\r\n    const hasDone = !(loading || error);\r\n\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = hasDone ? <PlanetView planet={planet} /> : null;\r\n    const errInd = error ? <ErrorIndicator/> : null;\r\n\r\n    return (\r\n      <div className='random-planet card'>\r\n        {spinner}\r\n        {content}\r\n        {errInd}\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n};\r\n\r\nconst PlanetView = ({planet}) => {\r\n  const { id, name,\r\n        population,\r\n        rotationPeriod,\r\n        diameter } = planet;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <img className='planet-image'\r\n           src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\r\n           alt=\"\"/>\r\n      <div className='card-body'>\r\n        <h4>{ name }</h4>\r\n        <ul className='list-group list-group-flush'>\r\n          <li className='list-group-item'>\r\n            <span className='term'>Population</span>\r\n            <span>{ population }</span></li>\r\n          <li className='list-group-item'>\r\n            <span className='term'>Rotation Period</span>\r\n            <span>{ rotationPeriod }</span></li>\r\n          <li className='list-group-item'>\r\n            <span className='term'>Diameter</span>\r\n            <span>{ diameter }</span></li>\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}","import RandomPlanet from \"./random-planet\";\r\n\r\nexport default RandomPlanet;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst LoginPage = ({ isLoggedIn, onLogin }) => {\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/\"/>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <p>Login to see secret page!</p>\r\n      <button\r\n        className=\"btn btn-primary\"\r\n        onClick={onLogin}>\r\n        Login\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst SecretPage = ({ isLoggedIn }) => {\r\n\r\n  if (isLoggedIn) {\r\n    return (\r\n      <div className=\"jumbotron text-center\">\r\n        <h3>This page is full of secrets!!!</h3>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <Redirect to=\"/login\" />;\r\n\r\n};\r\n\r\nexport default SecretPage;","import Spinner from \"./spinner\";\r\n\r\nexport default Spinner;","import ItemList from \"./item-list\";\r\n\r\nexport default ItemList;","import React, { Component } from 'react';\r\nimport Spinner from '../spinner'\r\nimport './item-list.css'\r\n\r\n\r\nexport default class ItemList extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      itemList: [],\r\n      loading: false\r\n    };\r\n\r\n    this.renderItems = (arr) => {\r\n      return arr.map(({id, name}) => {\r\n        return (\r\n          <li className='item-list-item list-group-item'\r\n              key={id}\r\n              onClick={()=>{this.props.onItemSelected(id)}}>\r\n            {name}\r\n          </li>\r\n        )\r\n      });\r\n    };\r\n  };\r\n\r\n  componentDidMount(){\r\n    const { getData } = this.props;\r\n    getData()\r\n      .then((itemList) => {\r\n        this.setState({itemList});\r\n      });\r\n  };\r\n\r\n\r\n  render () {\r\n    const { itemList, loading } = this.state;\r\n\r\n    const items = !loading ? this.renderItems(itemList) : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n\r\n    return (\r\n      <ul className='item-list list-group'>\r\n        {items}\r\n        {spinner}\r\n      </ul>\r\n    )\r\n  }\r\n};\r\n\r\n","import PersonDetails from \"./person-details\";\r\n\r\nexport default PersonDetails;","import React, { Component } from 'react';\r\nimport './person-details.css';\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\nexport default class PersonDetails extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.swapiService = new SwapiService();\r\n\r\n    this.state = {\r\n      personData: null\r\n    };\r\n\r\n\r\n    this.updatePerson = () => {\r\n      const { personId } = this.props;\r\n\r\n      if(!personId){return;}\r\n\r\n      this.swapiService\r\n          .getPerson(personId)\r\n          .then((personData) => {\r\n            this.setState({\r\n              personData\r\n            });\r\n          });\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updatePerson();\r\n  }\r\n\r\n  componentDidUpdate(prevProp){\r\n    if (this.props.personId !== prevProp.personId) {\r\n      this.updatePerson()\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n\r\n    if(!this.state.personData){\r\n      return <span>Select person from a list</span>\r\n    }\r\n\r\n    const {id, name, gender, birthYear, eyeColor} = this.state.personData;\r\n\r\n    return (\r\n      <div className='person-details card'>\r\n        <img className='person-image card-image'\r\n             src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}\r\n             alt=\"\"/>\r\n        <div className='card-body'>\r\n          <h4>{name}</h4>\r\n          <ul className='list-group list-group-flush'>\r\n            <li className='list-group-item'>\r\n              <span className='term'>Gender</span>\r\n              <span>{gender}</span></li>\r\n            <li className='list-group-item'>\r\n              <span className='term'>Birth Year</span>\r\n              <span>{birthYear}</span></li>\r\n            <li className='list-group-item'>\r\n              <span className='term'>Eye color</span>\r\n              <span>{eyeColor}</span></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n};","import React from 'react';\r\nimport ItemList from '../item-list'\r\nimport PersonDetails from '../person-details'\r\n\r\nconst People = ({onItemSelected, getData, personId}) => {\r\n  return (\r\n    <div className='row mb2'>\r\n      <div className='left-col col-md-6'>\r\n        <ItemList onItemSelected={ onItemSelected }\r\n                  getData={ getData }/>\r\n      </div>\r\n      <div className='col-md-6'>\r\n        <PersonDetails personId = { personId } />\r\n      </div>\r\n    </div>)\r\n};\r\n\r\nexport default People;","import PlanetDetails from \"./planet-details\";\r\n\r\nexport default PlanetDetails;","import React, { Component } from 'react';\r\nimport './planet-details.css';\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\n\r\nexport default class PlanetDetails extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.swapiService = new SwapiService();\r\n\r\n    this.state = {\r\n      planetData: null\r\n    };\r\n\r\n\r\n    this.updatePlanet = () => {\r\n      const { planetId } = this.props;\r\n\r\n      console.log(planetId);\r\n\r\n      if(!planetId){return;}\r\n\r\n      this.swapiService\r\n        .getPlanet(planetId)\r\n        .then((planetData) => {\r\n          this.setState({\r\n            planetData\r\n          });\r\n        });\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updatePlanet();\r\n  }\r\n\r\n  componentDidUpdate(prevProp){\r\n    console.log(this.props.planetId);\r\n    if (this.props.planetId !== prevProp.planetId) {\r\n      this.updatePlanet()\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n\r\n    console.log('render', this.props.planetId);\r\n\r\n    if(!this.state.planetData) {\r\n      return <span>Select planet from a list</span>\r\n    }\r\n\r\n    const {id, name, population, rotationPeriod, diameter} = this.state.planetData;\r\n\r\n    return (\r\n      <div className='person-details card'>\r\n        <img className='person-image card-image'\r\n             src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\r\n             alt=\"\"/>\r\n        <div className='card-body'>\r\n          <h4>{name}</h4>\r\n          <ul className='list-group list-group-flush'>\r\n            <li className='list-group-item'>\r\n              <span className='term'>Population</span>\r\n              <span>{population}</span></li>\r\n            <li className='list-group-item'>\r\n              <span className='term'>Rotation Period</span>\r\n              <span>{rotationPeriod}</span></li>\r\n            <li className='list-group-item'>\r\n              <span className='term'>Diameter</span>\r\n              <span>{diameter}</span></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n};","import React from 'react';\r\nimport ItemList from '../item-list'\r\nimport PlanetDetails from '../planet-details'\r\n\r\nconst Planets = ({onItemSelected, getData, planetId}) => {\r\n  return (\r\n    <div className='row mb2'>\r\n      <div className='left-col col-md-6'>\r\n        <ItemList onItemSelected={ onItemSelected }\r\n                  getData={ getData }/>\r\n      </div>\r\n      <div className='col-md-6'>\r\n        <PlanetDetails planetId = { planetId } />\r\n      </div>\r\n    </div>)\r\n};\r\n\r\nexport default Planets;","import StarshipDetails from \"./starship-details\";\r\n\r\nexport default StarshipDetails;","import React, { Component } from 'react';\r\nimport './starship-details.css';\r\nimport SwapiService from '../../services/swapi-service';\r\n\r\n\r\nexport default class StarshipDetails extends Component {\r\n  constructor(){\r\n    super();\r\n\r\n    this.swapiService = new SwapiService();\r\n\r\n    this.state = {\r\n      starshipData: null\r\n    };\r\n\r\n\r\n    this.updateStarship = () => {\r\n      const { starshipId } = this.props;\r\n      if(!starshipId){return;}\r\n\r\n      this.swapiService\r\n        .getStarship(starshipId)\r\n        .then((starshipData) => {\r\n          this.setState({\r\n            starshipData\r\n          });\r\n        });\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updateStarship();\r\n  }\r\n\r\n  componentDidUpdate(prevProp){\r\n    if (this.props.starshipId !== prevProp.starshipId) {\r\n      this.updateStarship();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render(){\r\n\r\n    if(!this.state.starshipData){\r\n      return <span> Select starship from a list </span>\r\n    }\r\n\r\n    const {id, name, model, length, cost} = this.state.starshipData;\r\n\r\n    return (\r\n      <div className='person-details card'>\r\n        <img className='person-image card-image'\r\n             src={`https://starwars-visualguide.com/assets/img/starships/${id}.jpg`}\r\n             alt=\"\"/>\r\n        <div className='card-body'>\r\n          <h4>{name}</h4>\r\n          <ul className='list-group list-group-flush'>\r\n            <li className='list-group-item'>\r\n              <span className='term'>Model</span>\r\n              <span>{model}</span></li>\r\n            <li className='list-group-item'>\r\n              <span className='term'>Length</span>\r\n              <span>{length}</span></li>\r\n            <li className='list-group-item'>\r\n              <span className='term'>Cost</span>\r\n              <span>{cost}</span></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n};","import React from 'react';\r\nimport ItemList from '../item-list';\r\nimport StarshipDetails from \"../starship-details\";\r\n\r\nconst Starships = ({onItemSelected, getData, starshipId}) => {\r\n  return (\r\n    <div className='row mb2'>\r\n      <div className='left-col col-md-6'>\r\n        <ItemList onItemSelected={ onItemSelected }\r\n                  getData={ getData }/>\r\n      </div>\r\n      <div className='col-md-6'>\r\n        <StarshipDetails starshipId = { starshipId } />\r\n      </div>\r\n    </div>)\r\n};\r\n\r\nexport default Starships;","import App from \"./app\";\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Header from \"../header\";\r\nimport RandomPlanet from \"../random-planet\";\r\nimport LoginPage from \"../pages/login-page\";\r\nimport SecretPage from \"../pages/secret-page\";\r\nimport People from \"../pages/people\";\r\nimport Planets from \"../pages/planets\";\r\nimport Starships from \"../pages/starships\";\r\n\r\n\r\nimport './app.css'\r\nimport SwapiService from \"../../services/swapi-service\";\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor(){\r\n    super();\r\n\r\n    this.swapiService = new SwapiService();\r\n\r\n    this.state = {\r\n      selectedPerson: null,\r\n      selectedPlanet: null,\r\n      selectedStarship: null,\r\n      isLoggedIn: false\r\n    };\r\n\r\n    this.onLogin = () => {\r\n      this.setState({isLoggedIn: true});\r\n    };\r\n\r\n    this.onPersonSelected = (id) => {\r\n      this.setState({selectedPerson: id});\r\n    };\r\n    this.onPlanetSelected = (id) => {\r\n      this.setState({selectedPlanet: id});\r\n    };\r\n    this.onStarshipSelected = (id) => {\r\n      this.setState({selectedStarship: id});\r\n    };\r\n  }\r\n\r\n  render(){\r\n    const {isLoggedIn} = this.state;\r\n    return (\r\n      <Router>\r\n        <div className='stardb-app'>\r\n          <Header />\r\n          <RandomPlanet />\r\n          <Switch>\r\n            <Route\r\n              path='/'\r\n              render={()=><h2>Welcome to StarDB</h2>}\r\n              exact\r\n            />\r\n            <Route\r\n              path='/people'\r\n              render={()=>{ return ( <People\r\n                onItemSelected={ this.onPersonSelected }\r\n                getData={ this.swapiService.getAllPeople }\r\n                personId = { this.state.selectedPerson } />\r\n              )\r\n              }}\r\n              exact\r\n            />\r\n            <Route\r\n              path='/planets'\r\n              render={()=> { return ( <Planets\r\n                onItemSelected={ this.onPlanetSelected }\r\n                getData={ this.swapiService.getAllPlanets }\r\n                planetId = { this.state.selectedPlanet } />\r\n              )\r\n              }}\r\n              exact />\r\n            <Route\r\n              path='/starships'\r\n              render={()=> { return ( <Starships\r\n                onItemSelected={ this.onStarshipSelected }\r\n                getData={ this.swapiService.getAllStarships }\r\n                starshipId = { this.state.selectedStarship } />\r\n              )\r\n              }}\r\n              exact />\r\n\r\n            <Route\r\n              path='/login'\r\n              render={() => { return <LoginPage isLoggedIn={isLoggedIn}\r\n                                                onLogin={this.onLogin} />}}\r\n            />\r\n            <Route\r\n              path='/secret'\r\n              render={()=>{ return <SecretPage isLoggedIn={isLoggedIn} />}}\r\n            />\r\n\r\n            <Route render={()=><h2>Page not found(((</h2>}/>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  };\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport App from \"./components/app\";\r\n\r\nReactDOM.render(<App />,\r\n  document.querySelector('#root'));\r\n"],"sourceRoot":""}